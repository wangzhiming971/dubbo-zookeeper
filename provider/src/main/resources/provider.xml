<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd
        http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
    <!-- 当前服务的名称 -->
    <dubbo:application name="provider" />
    <!-- 注册中心的地址 这里注册中心用的是zookeeper -->
    <dubbo:registry protocol="zookeeper"  address="127.0.0.1:2181"/>
    <!-- 指定通信规则（通信协议？通信端口） -->
    <dubbo:protocol name="dubbo" port="20880"/>

    <!-- 暴露服务
     负载均衡策略
        Random
        随机，按权重设置随机概率。
        在一个截面上碰撞的概率高，但调用量越大分布越均匀，而且按概率使用权重后也比较均匀，有利于动态调整提供者权重。
        RoundRobin
        轮询，按公约后的权重设置轮询比率。
        存在慢的提供者累积请求的问题，比如：第二台机器很慢，但没挂，当请求调到第二台时就卡在那，久而久之，所有请求都卡在调到第二台上。
        LeastActive
        最少活跃调用数，相同活跃数的随机，活跃数指调用前后计数差。
        使慢的提供者收到更少请求，因为越慢的提供者的调用前后计数差会越大。
        ConsistentHash
        一致性 Hash，相同参数的请求总是发到同一提供者。
        当某一台提供者挂时，原本发往该提供者的请求，基于虚拟节点，平摊到其它提供者，不会引起剧烈变动。
        缺省只对第一个参数 Hash，如果要修改，请配置 <dubbo:parameter key="hash.arguments" value="0,1" />
        缺省用 160 份虚拟节点，如果要修改，请配置 <dubbo:parameter key="hash.nodes" value="320" />
    -->
    <dubbo:service   interface="com.wang.service.UserService" ref="userService" version="1.0.0"/>
    <!-- 需要暴露的服务的实现类 -->
    <bean id="userService" class="com.wang.service.impl.UserServiceImpl"/>
    <!-- 监控中心协议，如果为protocol="registry"，表示从注册中心发现监控中心地址，否则直连监控中心 -->
    <dubbo:monitor protocol="registry"/>
    <!--
       timeout：超时时间配置
       retries：重试次数配置(超时报错后重试连接的次数,不含第一次调用,如果目标服务有多个重试的时候会自动切换别的服务)
    -->
   <dubbo:provider timeout="3000" retries="2"/>
</beans>